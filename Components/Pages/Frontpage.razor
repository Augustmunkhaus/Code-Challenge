@page "/"
@using MovieSite.Models
@using MovieSite.ApiClient
@inject IApiClient ApiClient
@inject IApiService ApiService

<h1> Welcome </h1>

@if (MovieGenres == null)
{
    <p>Loading movies...</p>
}
else
//displaying genres, movie count, and movies under each genre
{ 
        @foreach (var genre in MovieGenres)
        { 
            <h4>@genre.name (@MovieCounts[genre.Id] movies)</h4>
            <a href="/genre/@genre.Id/@genre.name">Show All Movies</a>
            <div class="movie-row">
                    @foreach (var movie in Movies[genre.Id].Take(5))
                    {
                        <div class="movie-card">
                            <img src="https://image.tmdb.org/t/p/w500/@movie.poster_path" alt="@movie.Title" />
                            <div class="card-actions">
                                <a href="/movieinfo/@movie.MovieId" class="details-button">Details</a>
                                <button class="wishlist-button" @onclick="() => AddToWishlist(movie)">Add to Wishlist</button>
                            </div>
                            <div class="card-content">
                                <h5>@movie.Title</h5>
                                <strong>@DateTime.Parse(movie.release_date).Year</strong>
                            </div>
                            <br/>
                        </div>
                    }
            </div>   
        }
}

@code {

    public List<Genre> MovieGenres;
    public Dictionary<int, int> MovieCounts = new();
    public Dictionary<int, List<Movie>> Movies = new();
    public int CurrentPage = 1;
    
    protected override async Task OnInitializedAsync()
    { 
        //custom selection of displayed genres
        List<int> selectedGenreIds = new List<int> { 28, 35, 80, 99, 18, 27, 10749, 53};
        MovieGenres = await ApiService.SelectedGenresAsync(selectedGenreIds);
        
        foreach (var genre in MovieGenres)
        {
            MovieCounts[genre.Id] = await ApiClient.GetMovieCountByGenreAsync(genre.Id);
        }

        foreach (var genre in MovieGenres)
        {
            Movies[genre.Id] = await ApiClient.GetMoviesByGenreAsync(genre.Id, CurrentPage);
        }
        
    } 
    
    private async Task AddToWishlist(Movie movie)
    {
        await ApiService.AddToWishlist(movie);
    }
  }