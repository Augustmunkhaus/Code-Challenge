@page "/genre/{genreId:int}/{genreName}"
@using MovieSite.ApiClient
@using MovieSite.Models
@inject IApiClient ApiClient
@inject IApiService ApiService

<h1>@genreName Movies </h1>

@if (movies is null)
{
    <p>Loading...</p>
}
else
{
    <div class="movie-row">
        @foreach (var movie in movies)
        {
            <div class="movie-card">
                <img src="https://image.tmdb.org/t/p/w200/@movie.poster_path" alt="@movie.Title" />
                <div class="card-actions">
                    <a href="/movieinfo/@movie.MovieId" class="details-button">Details</a>
                    <button class="wishlist-button" @onclick="() => AddToWishlist(movie)">Add to Wishlist</button>
                </div>
                <div class="card-content">
                <p>@movie.Title</p>
                </div>
            </div>
        }
    </div>
}

<button @onclick="LoadMoreMovies">Show More Movies</button>
@code {
    [Parameter] public int genreId { get; set; }
    [Parameter] public string genreName { get; set; }
    private List<Movie> movies = new();
    private int currentPage = 1;
    
    protected override async Task OnInitializedAsync()
    {
        movies = await ApiClient.GetMoviesByGenreAsync(genreId, currentPage);
        
    }
    
    private async Task LoadMoreMovies()
    { 
        currentPage++;  
        var newMovies = await ApiClient.GetMoviesByGenreAsync(genreId, currentPage);
            movies.AddRange(newMovies);
            StateHasChanged();
    }
    
    private async Task AddToWishlist(Movie movie)
    {
        await ApiService.AddToWishlist(movie);
    }
}


